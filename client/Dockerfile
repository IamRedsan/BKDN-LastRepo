# ================================
# üõ†Ô∏è Build stage
# ================================
FROM node:18-alpine AS builder

RUN corepack enable && corepack prepare pnpm@latest --activate

WORKDIR /app

# Copy file c·∫•u h√¨nh c·∫ßn thi·∫øt tr∆∞·ªõc khi install
COPY package.json pnpm-lock.yaml ./ 
COPY tsconfig*.json ./ 
COPY next.config.mjs ./
COPY public ./public
COPY styles ./styles

# Install t·∫•t c·∫£ dependencies (bao g·ªìm dev)
RUN pnpm install

# Sao ch√©p m√£ ngu·ªìn c√≤n l·∫°i
COPY . .

# Build ·ª©ng d·ª•ng Next.js
RUN pnpm build

# ================================
# üöÄ Production stage
# ================================
FROM node:18-alpine

RUN corepack enable && corepack prepare pnpm@latest --activate

WORKDIR /app

# Ch·ªâ copy nh·ªØng g√¨ c·∫ßn thi·∫øt cho production
COPY package.json pnpm-lock.yaml ./
RUN pnpm install

# Copy build output t·ª´ builder
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/next.config.mjs ./
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json

EXPOSE 3000

# Ch·∫°y app b·∫±ng pnpm
CMD ["pnpm", "start"]

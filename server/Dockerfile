# ================================
# üõ†Ô∏è Build stage
# ================================
FROM node:18-alpine AS builder

# K√≠ch ho·∫°t corepack v√† pnpm
RUN corepack enable && corepack prepare pnpm@latest --activate

# Th∆∞ m·ª•c l√†m vi·ªác
WORKDIR /app

# Sao ch√©p c√°c file c·∫ßn thi·∫øt cho c√†i ƒë·∫∑t tr∆∞·ªõc khi copy to√†n b·ªô
COPY package.json pnpm-lock.yaml ./ 
COPY tsconfig*.json ./ 

# C√†i c√°c dependency (bao g·ªìm dev)
RUN pnpm install

# Sao ch√©p to√†n b·ªô m√£ ngu·ªìn
COPY . .

# Build project (Next.js, NestJS, v.v.)
RUN pnpm build

# ================================
# üöÄ Production stage
# ================================
FROM node:18-alpine

# K√≠ch ho·∫°t corepack + pnpm
RUN corepack enable && corepack prepare pnpm@latest --activate

# Th∆∞ m·ª•c ch·∫°y
WORKDIR /app

# Sao ch√©p file lock v√† package ƒë·ªÉ c√†i production dependencies
COPY package.json pnpm-lock.yaml ./

# C√†i ƒë·∫∑t ch·ªâ production dependencies
RUN pnpm install --prod

# Copy to√†n b·ªô t·ª´ build stage (bao g·ªìm dist ho·∫∑c .next)
COPY --from=builder /app ./

# L·ªánh ch·∫°y app
CMD ["pnpm", "start"]
